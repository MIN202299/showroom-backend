version: '3'

networks:
  custom-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24

services:
  backend:
    restart: always
    build: 
      context: .
      dockerfile: Dockerfile.backend
    image: showroom-backend
    container_name: backend
    ports:
      - 8421:8421
      - 8422:8422

    volumes:
      - /d/dockerData/showroom-backend/upload:/showroom-backend/public/upload
    
    depends_on:
      - db
    
    networks:
      custom-net:
        ipv4_address: 172.19.0.2
        aliases:
          - showroom-backend-ip
    environment:
      - PUBLIC_PATH=http://192.168.1.69:8421

  fileproxy:
    restart: always
    build: 
      context: .
      dockerfile: Dockerfile.fileproxy
    
    image: file-proxy
    container_name: file-proxy
    depends_on:
      - backend

    ports:
      - 80:80

    volumes:
      - /d/dockerData/showroom-backend/upload:/app/upload
      # 将nginx配置文件映射到本地不生效
      # - /d/dockerData/showroom-backend/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    
    networks:
      custom-net:
        ipv4_address: 172.19.0.3
        aliases:
          - fileproxy-ip

  db:
    restart: always
    image: mongo
    container_name: mongo-db
    ports:
      - 27017:27017
    command: [--auth]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    volumes:
      - /d/dockerData/showroom-backend/mongo:/data/db

    networks:
      custom-net:
        ipv4_address: 172.19.0.4
        aliases:
          - db-ip
    
# docker compose -f docker-compose.yml